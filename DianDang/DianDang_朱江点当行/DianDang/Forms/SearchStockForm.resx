<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="progressBar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>