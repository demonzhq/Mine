using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DianDang
{
    /// <summary>
    /// Controller class for DDOperation
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DDOperationController
    {
        // Preload our schema..
        DDOperation thisSchemaLoad = new DDOperation();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DDOperationCollection FetchAll()
        {
            DDOperationCollection coll = new DDOperationCollection();
            Query qry = new Query(DDOperation.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDOperationCollection FetchByID(object OperationID)
        {
            DDOperationCollection coll = new DDOperationCollection().Where("OperationID", OperationID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDOperationCollection FetchByQuery(Query qry)
        {
            DDOperationCollection coll = new DDOperationCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object OperationID)
        {
            return (DDOperation.Delete(OperationID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object OperationID)
        {
            return (DDOperation.Destroy(OperationID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? TicketID,int? PawnageID,int? OperationType,string OperationNumber,string ServiceFee,string InterestFee,string ReturnFee,string OverdueFee,string Amount,string ReckonAmount,string OperationDate,string StartDate,string EndDate,string OperaterName,int? PreOperationID,int? NextOperationID,int? Deleted)
	    {
		    DDOperation item = new DDOperation();
		    
            item.TicketID = TicketID;
            
            item.PawnageID = PawnageID;
            
            item.OperationType = OperationType;
            
            item.OperationNumber = OperationNumber;
            
            item.ServiceFee = ServiceFee;
            
            item.InterestFee = InterestFee;
            
            item.ReturnFee = ReturnFee;
            
            item.OverdueFee = OverdueFee;
            
            item.Amount = Amount;
            
            item.ReckonAmount = ReckonAmount;
            
            item.OperationDate = OperationDate;
            
            item.StartDate = StartDate;
            
            item.EndDate = EndDate;
            
            item.OperaterName = OperaterName;
            
            item.PreOperationID = PreOperationID;
            
            item.NextOperationID = NextOperationID;
            
            item.Deleted = Deleted;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int OperationID,int? TicketID,int? PawnageID,int? OperationType,string OperationNumber,string ServiceFee,string InterestFee,string ReturnFee,string OverdueFee,string Amount,string ReckonAmount,string OperationDate,string StartDate,string EndDate,string OperaterName,int? PreOperationID,int? NextOperationID,int? Deleted)
	    {
		    DDOperation item = new DDOperation();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.OperationID = OperationID;
				
			item.TicketID = TicketID;
				
			item.PawnageID = PawnageID;
				
			item.OperationType = OperationType;
				
			item.OperationNumber = OperationNumber;
				
			item.ServiceFee = ServiceFee;
				
			item.InterestFee = InterestFee;
				
			item.ReturnFee = ReturnFee;
				
			item.OverdueFee = OverdueFee;
				
			item.Amount = Amount;
				
			item.ReckonAmount = ReckonAmount;
				
			item.OperationDate = OperationDate;
				
			item.StartDate = StartDate;
				
			item.EndDate = EndDate;
				
			item.OperaterName = OperaterName;
				
			item.PreOperationID = PreOperationID;
				
			item.NextOperationID = NextOperationID;
				
			item.Deleted = Deleted;
				
	        item.Save(UserName);
	    }
    }
}
