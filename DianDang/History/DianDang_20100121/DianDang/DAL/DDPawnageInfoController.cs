using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DianDang
{
    /// <summary>
    /// Controller class for DDPawnageInfo
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class DDPawnageInfoController
    {
        // Preload our schema..
        DDPawnageInfo thisSchemaLoad = new DDPawnageInfo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public DDPawnageInfoCollection FetchAll()
        {
            DDPawnageInfoCollection coll = new DDPawnageInfoCollection();
            Query qry = new Query(DDPawnageInfo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDPawnageInfoCollection FetchByID(object PawnageID)
        {
            DDPawnageInfoCollection coll = new DDPawnageInfoCollection().Where("PawnageID", PawnageID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public DDPawnageInfoCollection FetchByQuery(Query qry)
        {
            DDPawnageInfoCollection coll = new DDPawnageInfoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PawnageID)
        {
            return (DDPawnageInfo.Delete(PawnageID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PawnageID)
        {
            return (DDPawnageInfo.Destroy(PawnageID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? ClassID,int? ParentID,int? StatusID,string CountNumber,string Weight,double Price,string FeeRate,string InterestRate,string DiscountPercent,string Description,string Remark,string StartDate,string EndDate,string PhotoPath)
	    {
		    DDPawnageInfo item = new DDPawnageInfo();
		    
            item.ClassID = ClassID;
            
            item.ParentID = ParentID;
            
            item.StatusID = StatusID;
            
            item.CountNumber = CountNumber;
            
            item.Weight = Weight;
            
            item.Price = Price;
            
            item.FeeRate = FeeRate;
            
            item.InterestRate = InterestRate;
            
            item.DiscountPercent = DiscountPercent;
            
            item.Description = Description;
            
            item.Remark = Remark;
            
            item.StartDate = StartDate;
            
            item.EndDate = EndDate;
            
            item.PhotoPath = PhotoPath;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int PawnageID,int? ClassID,int? ParentID,int? StatusID,string CountNumber,string Weight,double Price,string FeeRate,string InterestRate,string DiscountPercent,string Description,string Remark,string StartDate,string EndDate,string PhotoPath)
	    {
		    DDPawnageInfo item = new DDPawnageInfo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PawnageID = PawnageID;
				
			item.ClassID = ClassID;
				
			item.ParentID = ParentID;
				
			item.StatusID = StatusID;
				
			item.CountNumber = CountNumber;
				
			item.Weight = Weight;
				
			item.Price = Price;
				
			item.FeeRate = FeeRate;
				
			item.InterestRate = InterestRate;
				
			item.DiscountPercent = DiscountPercent;
				
			item.Description = Description;
				
			item.Remark = Remark;
				
			item.StartDate = StartDate;
				
			item.EndDate = EndDate;
				
			item.PhotoPath = PhotoPath;
				
	        item.Save(UserName);
	    }
    }
}
